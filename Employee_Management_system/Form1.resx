<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        paU3EoI3KyvTyuMAAAAASUVORK5CYII=
</value>
  </data>
</root>